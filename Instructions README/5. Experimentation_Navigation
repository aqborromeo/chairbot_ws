This instruction was created to run the steps use for our experimentation

NOTE: Refer to the main Readme.md file for description of each package.

# Package: Navigation

## Build
    1. Initialize a catkin workspace

    $ cd ~/chairbot_ws/src && catkin_init_workspace

    2. Move back to the project folder and build

    $ cd ..
    $ catkin_make

    3. In a terminal Launch the world and robot

    $ source ~/chairbot_ws/devel/setup.bash
    $ roslaunch chairbot_navigation single_chair.launch


## SLAM Mapping
    NOTE: this section is optional, only if would like to create a new map, otherwise you can skip and proceed to navigation section

    1. In a second terminal launch the `chairbot_navigation_slam.launch` file to start the creating SLAM mapping.

    $ roslaunch chairbot_navigation chairbot_navigation_slam.launch


    2. Open third terminal, and run the `teleop` node and move around, then save the map.

    $ roslaunch turtlebot3_teleop turtlebot3_teleop_key.launch


    3. Open fourth terminal, save the map on the intended localtion

    $ rosrun map_server map_saver -f ~/chairbot_ws/src/chairbot_navigation/maps/office_map4

    4. Stop and close all terminal, then Move to the navigation part

## Navigation

    1. In a terminal Launch the world and robot

    $ source ~/chairbot_ws/devel/setup.bash
    $ roslaunch chairbot_navigation single_chair.launch

    2. Open second terminal Launch `chairbot_navigation.launch`

    $ source ~/chairbot_ws/devel/setup.bash
    $ roslaunch chairbot_navigation chairbot_navigation.launch map_file:=$HOME/chairbot_ws/src/chairbot_navigation/maps/office_map2.yaml

    3. Go to rviz and test the navigation by clicking "2D Post Estinamate" and "2D Nav Goal".

# SLAM for Multiple toolButtonStyle

    1. Install the map-merge package
    $ sudo apt-get install ros-noetic-multirobot-map-merge 

    If not able to install try to build the package using the m-explore neotic-devel branch

    $ cd ~/catkin_ws
    $ git clone https://github.com/hrnr/m-explore.git -b noetic-devel
    $ cd ~/catkin_ws && catkin_make


    2. Load the turtlebot3 in the turtlebot house.

    $ roslaunch turtlebot3_gazebo multi_turtlebot3.launch

    3. Launch SLAM for each TurtleBot3

    $ ROS_NAMESPACE=tb3_0 roslaunch turtlebot3_slam turtlebot3_gmapping.launch set_base_frame:=tb3_0/base_footprint set_odom_frame:=tb3_0/odom set_map_frame:=tb3_0/map
    $ ROS_NAMESPACE=tb3_1 roslaunch turtlebot3_slam turtlebot3_gmapping.launch set_base_frame:=tb3_1/base_footprint set_odom_frame:=tb3_1/odom set_map_frame:=tb3_1/map
    $ ROS_NAMESPACE=tb3_2 roslaunch turtlebot3_slam turtlebot3_gmapping.launch set_base_frame:=tb3_2/base_footprint set_odom_frame:=tb3_2/odom set_map_frame:=tb3_2/map

    NOTE: if you have error like "/usr/bin/env: ‘python’: No such file or directory" you're encountering is because your system is trying to use python, but it isn't finding it in the expected location. Most likely, your system is using Python 3, which is often invoked with python3, rather than python (which refers to Python 2, now deprecated).

    $ sudo ln -s /usr/bin/python3 /usr/bin/python

    4. Merge map data from each TurtleBot3

    $ roslaunch turtlebot3_gazebo multi_map_merge.launch

    5. Launch rviz

    rosrun rviz rviz -d `rospack find turtlebot3_gazebo`/rviz/multi_turtlebot3_slam.rviz

    6. Operate each Turtlebot3

    $ ROS_NAMESPACE=tb3_0 rosrun turtlebot3_teleop turtlebot3_teleop_key
    $ ROS_NAMESPACE=tb3_1 rosrun turtlebot3_teleop turtlebot3_teleop_key
    $ ROS_NAMESPACE=tb3_2 rosrun turtlebot3_teleop turtlebot3_teleop_key

    7. Save Map

    $ rosrun map_server map_saver -f ~/map

